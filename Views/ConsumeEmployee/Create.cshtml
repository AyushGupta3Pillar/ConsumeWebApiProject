@model ConsumeWebApiProject.Models.Employee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })*@

                @Html.DropDownListFor(model => model.gender, new List<SelectListItem>
       {
           new SelectListItem{Text="Male",Value="Male"},
           new SelectListItem{Text="Female" , Value="Female" }
       })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })*@


                @Html.DropDownListFor(model => model.designation, new List<SelectListItem>
      {
          new SelectListItem{Text="Software Engineer I",Value="Software Engineer I"},
          new SelectListItem{Text="Quality Assurance Engineer" , Value="Quality Assurance Engineer" },
          new SelectListItem{Text="Software Engineer II",Value="Software Engineer II"},
          new SelectListItem{Text="Senior Software Engineer" , Value="Senior Software Engineer" },
          new SelectListItem{Text="Technical Lead",Value="Technical Lead"},
          new SelectListItem{Text="Module Lead" , Value="Module Lead" },
          new SelectListItem{Text="IT Head",Value="IT Head"},
          new SelectListItem{Text="HR Manager" , Value="HR Manager" },
          new SelectListItem{Text="Delievery Lead",Value="Delievery Lead"},
          new SelectListItem{Text="Business Analyst" , Value="Business Analyst" },


      })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
